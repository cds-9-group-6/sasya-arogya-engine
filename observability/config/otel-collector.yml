receivers:
  # OTLP receiver for gRPC and HTTP
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  # Prometheus receiver to scrape metrics
  prometheus:
    config:
      scrape_configs:
        - job_name: 'sasya-engine'
          scrape_interval: 15s
          static_configs:
            - targets: ['host.docker.internal:9080']  # FastAPI server
          metrics_path: /metrics
        - job_name: 'otel-collector'
          scrape_interval: 30s
          static_configs:
            - targets: ['localhost:8888']

processors:
  # Batch processor for performance
  batch:
    timeout: 10s
    send_batch_size: 1024
    send_batch_max_size: 2048

  # Memory limiter
  memory_limiter:
    limit_mib: 256
    check_interval: 1s

  # Resource processor to add metadata
  resource:
    attributes:
      - key: service.name
        value: sasya-arogya-engine
        action: upsert
      - key: service.version
        value: 1.0.0
        action: upsert

  # Attributes processor for metric labels (simplified)
  attributes/metrics:
    actions:
      - key: component
        value: sasya-engine
        action: upsert

exporters:
  # Prometheus exporter
  prometheus:
    endpoint: "0.0.0.0:8889"
    # Removed namespace to avoid conflicts
    const_labels:
      environment: local

  # Send metrics to Prometheus
  prometheusremotewrite:
    endpoint: "http://prometheus:9090/api/v1/write"
    tls:
      insecure: true

  # OTLP exporter for traces (to Jaeger)
  otlp/traces:
    endpoint: jaeger:14250
    tls:
      insecure: true

  # Logging exporter for debugging
  logging:
    verbosity: normal
    sampling_initial: 2
    sampling_thereafter: 500

service:
  pipelines:
    # Metrics pipeline
    metrics:
      receivers: [otlp, prometheus]
      processors: [memory_limiter, resource, attributes/metrics, batch]
      exporters: [prometheus, prometheusremotewrite, logging]

    # Traces pipeline
    traces:
      receivers: [otlp]
      processors: [memory_limiter, resource, batch]
      exporters: [otlp/traces, logging]

    # Logs pipeline
    logs:
      receivers: [otlp]
      processors: [memory_limiter, resource, batch]
      exporters: [logging]

  extensions: [health_check]
  
extensions:
  health_check:
    endpoint: 0.0.0.0:13133
