services:
  # Prometheus - Metrics storage
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: sasya-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - sasya-observability
    restart: unless-stopped

  # OpenTelemetry Collector - Metrics collection and processing
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.89.0
    container_name: sasya-otel-collector
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics endpoint
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # Health check
    volumes:
      - ./config/otel-collector.yml:/etc/otel-collector.yml
    command: ["--config=/etc/otel-collector.yml"]
    depends_on:
      - prometheus
    networks:
      - sasya-observability
    restart: unless-stopped

  # Grafana - Dashboards and visualization
  grafana:
    image: grafana/grafana:10.0.0
    container_name: sasya-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=sasya-admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    depends_on:
      - prometheus
    networks:
      - sasya-observability
    restart: unless-stopped

  # Jaeger - Distributed tracing (optional)
  jaeger:
    image: jaegertracing/all-in-one:1.48
    container_name: sasya-jaeger
    ports:
      - "16686:16686"  # Jaeger UI
      - "14250:14250"  # gRPC
      - "14268:14268"  # HTTP
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - sasya-observability
    restart: unless-stopped

  # Redis - For caching metrics (optional)
  redis:
    image: redis:7-alpine
    container_name: sasya-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sasya-observability
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:
  redis_data:

networks:
  sasya-observability:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
